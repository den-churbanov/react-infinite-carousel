{"version":3,"sources":["lib/components/Card/Card.module.css","lib/components/Carousel/hooks/useCarousel.hook.ts","lib/components/Icon/Icon.tsx","lib/components/Icon/icons.svg","lib/components/Carousel/СarouselService.ts","lib/components/Carousel/Carousel.tsx","lib/components/Card/Card.tsx","App.tsx","index.tsx","lib/components/Carousel/Carousel.module.css"],"names":["module","exports","Direction","Icon","name","className","file","xlinkHref","service","ON_MOVE_OFFSET","getInitialItems","items","slice","length","isExceedsRightBorder","scrollX","position","slidesToShow","dx","Math","abs","isExceedsLeftBorder","offset","isMoveExceedsBorders","checkTrackTransitionProperty","trackElement","style","transition","includes","initializeSliderPosition","setPosition","round","getConfig","itemWidth","itemMargin","trackStyle","transform","itemStyle","minWidth","margin","DEFAULT_BREAKPOINTS","point","Carousel","props","breakpoints","renderCard","wrapper","useRef","track","itemsToScroll","useState","carouselItems","setCarouselItems","ready","setReady","direction","setDirection","wrapperWidth","setWrapperWidth","touchStart","setTouchStart","useEffect","observer","ResizeObserver","current","clientWidth","observe","disconnect","useMemo","config","prevBtnHandler","e","left","prevPos","nextBtnHandler","right","onTouchStartHandler","touches","clientX","onTouchMoveHandler","onTouchEndHandler","prevState","onTransitionEndHandler","target","first","shift","last","pop","useCarousel","styles","carousel_wrapper","ref","css","carousel_button","carousel_button__prev","onClick","IconsSVG","carousel_container","carousel_track","onTransitionEnd","onTouchStart","onTouchMove","onTouchEnd","map","item","idx","key","carousel_button__next","Card","nested","slider_card","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.686778a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider_card\":\"Card_slider_card__1BwnV\"};","import React, {useEffect, useLayoutEffect, useMemo, useState} from \"react\";\r\nimport {IBreakPoint, ICardItem} from '../Carousel';\r\nimport {service} from '../СarouselService';\r\n\r\nenum Direction {\r\n    left,\r\n    right\r\n}\r\n\r\ntype ICarouselHookProps = {\r\n    items: Array<ICardItem>,\r\n    itemsToScroll?: number,\r\n    breakpoints: Array<IBreakPoint>,\r\n    itemMargin: number,\r\n    wrapper: React.RefObject<HTMLDivElement>,\r\n    track: React.RefObject<HTMLDivElement>\r\n}\r\ntype ICarouselHookReturn = {\r\n    ready: boolean,\r\n    config: { trackStyle: { transform: string }, itemStyle: { minWidth: string, margin: string } },\r\n    prevBtnHandler: (e: React.MouseEvent) => void,\r\n    nextBtnHandler: (e: React.MouseEvent) => void,\r\n    onTouchStartHandler: (e: React.TouchEvent) => void,\r\n    onTouchMoveHandler: (e: React.TouchEvent) => void,\r\n    onTouchEndHandler: (e: React.TouchEvent) => void,\r\n    onTransitionEndHandler: (e: React.TransitionEvent) => void,\r\n    carouselItems: Array<ICardItem>\r\n}\r\ntype ICarouselHook = (props: ICarouselHookProps) => ICarouselHookReturn;\r\n\r\nexport const useCarousel: ICarouselHook = props => {\r\n\r\n    const {items, breakpoints, wrapper, track, itemMargin, itemsToScroll = 1} = props;\r\n\r\n    const [carouselItems, setCarouselItems] = useState(service.getInitialItems(items));\r\n\r\n    const [ready, setReady] = useState(false);\r\n    const [position, setPosition] = useState(0);\r\n    const [direction, setDirection] = useState<Direction | null>(null);\r\n    const [wrapperWidth, setWrapperWidth] = useState(-1);\r\n    const [touchStart, setTouchStart] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const handler = () => {\r\n            setWrapperWidth(wrapper.current!.clientWidth);\r\n        }\r\n        const observer = new ResizeObserver(handler);\r\n        observer.observe(wrapper.current as Element);\r\n        return () => {\r\n            observer.disconnect();\r\n        }\r\n    }, [])\r\n    useEffect(() => service.initializeSliderPosition(track.current, scrollX, setPosition, carouselItems), [wrapperWidth])\r\n    useEffect(() => service.checkTrackTransitionProperty(track.current), [position, ready])\r\n\r\n    const slidesToShow = useMemo(() => {\r\n        for (const {slidesToShow, point} of breakpoints) {\r\n            if (wrapperWidth < point && items.length > slidesToShow) return slidesToShow;\r\n        }\r\n        return items.length > 6 ? 6 : items.length;\r\n    }, [wrapperWidth])\r\n\r\n    const itemWidth = useMemo(() => {\r\n        return (wrapperWidth - (slidesToShow * 2 - 2) * itemMargin) / slidesToShow;\r\n    }, [wrapperWidth, slidesToShow])\r\n    const scrollX = itemWidth + 2 * itemMargin\r\n\r\n    const config = service.getConfig(position, itemWidth, itemMargin);\r\n\r\n    //handlers\r\n    const prevBtnHandler = (e: React.MouseEvent) => {\r\n        if (service.isExceedsLeftBorder(position, scrollX)) return;\r\n        setDirection(Direction.left);\r\n        setPosition(prevPos => prevPos + itemsToScroll * scrollX);\r\n    }\r\n\r\n    const nextBtnHandler = (e: React.MouseEvent) => {\r\n        if (service.isExceedsRightBorder(scrollX, position, carouselItems, slidesToShow)) return;\r\n        setDirection(Direction.right);\r\n        setPosition(prevPos => prevPos - itemsToScroll * scrollX);\r\n    }\r\n    const onTouchStartHandler = (e: React.TouchEvent) => {\r\n        setTouchStart(e.touches[0].clientX);\r\n        // service.setStartPosition(position);\r\n    }\r\n    const onTouchMoveHandler = (e: React.TouchEvent) => {\r\n        const dx = e.touches[0].clientX - touchStart;\r\n        if (service.isMoveExceedsBorders(position, dx, scrollX, carouselItems, slidesToShow)) return;\r\n\r\n        const direction = dx < 0 ? Direction.right : Direction.left;\r\n        setTouchStart(e.touches[0].clientX);\r\n        setDirection(direction);\r\n        setPosition(prevPos => prevPos + dx);\r\n    }\r\n\r\n    //TODO refactoring\r\n    const onTouchEndHandler = (e: React.TouchEvent) => {\r\n        const dx = position % scrollX;\r\n        // console.log(service.calculateCardsOffsetCount(scrollX, position));\r\n        switch (direction) {\r\n            case Direction.left:\r\n                setPosition(prevState => prevState - dx);\r\n                break\r\n            case Direction.right:\r\n                if (Math.abs(dx) < itemWidth / 2) {\r\n                    setPosition(prevState => prevState - dx);\r\n                } else {\r\n                    setPosition(prevState => prevState + (Math.abs(dx) - scrollX));\r\n                }\r\n        }\r\n        setTouchStart(0);\r\n\r\n    }\r\n\r\n    //TODO refactoring\r\n    const onTransitionEndHandler = (e: React.TransitionEvent) => {\r\n        (e.target as HTMLDivElement).style.transition = 'none';\r\n        if (direction === Direction.right) {\r\n            const first = carouselItems.shift() as ICardItem;\r\n            setPosition(prevPos => prevPos + itemsToScroll * scrollX);\r\n            setCarouselItems([...carouselItems, first]);\r\n        } else if (direction === Direction.left) {\r\n            const last = carouselItems.pop() as ICardItem;\r\n            setPosition(prevPos => prevPos - itemsToScroll * scrollX);\r\n            setCarouselItems([last, ...carouselItems]);\r\n        } else if (!ready) {\r\n            setReady(true);\r\n        }\r\n    }\r\n\r\n    return {\r\n        ready,\r\n        config,\r\n        prevBtnHandler,\r\n        nextBtnHandler,\r\n        onTouchStartHandler,\r\n        onTouchMoveHandler,\r\n        onTouchEndHandler,\r\n        onTransitionEndHandler,\r\n        carouselItems\r\n    }\r\n}","import React from 'react'\r\n\r\ninterface IIconParams{\r\n    name: string,\r\n    className?: string,\r\n    file: string\r\n}\r\n\r\nexport const Icon = ({name, className, file}: IIconParams) => {\r\n    return (\r\n        <svg className={`${className ? className : ''}`}>\r\n            <use xlinkHref={`${file}#${name}-icon`}/>\r\n        </svg>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icons.6b0f99fa.svg\";","import {SetStateAction, Dispatch} from \"react\";\r\nimport {ICardItem} from \"./Carousel\";\r\n\r\nclass CarouselService {\r\n    private ON_MOVE_OFFSET = 15\r\n\r\n    // private start_position = -1;\r\n\r\n    getInitialItems = (items: Array<ICardItem>) => {\r\n        return [\r\n            ...items.slice(items.length / 2, items.length),\r\n            ...items,\r\n            ...items.slice(0, items.length / 2)\r\n        ];\r\n    }\r\n\r\n    isExceedsRightBorder = (scrollX: number, position: number, items: any[], slidesToShow: number, dx: number = 0) => {\r\n        if (dx) dx += this.ON_MOVE_OFFSET;\r\n        return Math.abs(position + dx) >= (items.length - slidesToShow - 1) * scrollX;\r\n    }\r\n\r\n    isExceedsLeftBorder = (position: number, scrollX: number = 0, dx: number = 0, offset: number = 0) => {\r\n        return Math.abs(position + dx) <= scrollX + offset;\r\n    }\r\n\r\n    isMoveExceedsBorders = (position: number, dx: number, scrollX: number, items: any[], slidesToShow: number) => {\r\n        return this.isExceedsLeftBorder(position, scrollX, dx, this.ON_MOVE_OFFSET) ||\r\n            this.isExceedsRightBorder(scrollX, position, items, slidesToShow, dx);\r\n    }\r\n\r\n    checkTrackTransitionProperty = (trackElement: HTMLDivElement | null) => {\r\n        if (trackElement && trackElement.style.transition.includes('none'))\r\n            trackElement.style.transition = '400ms';\r\n    }\r\n\r\n    initializeSliderPosition = (trackElement: HTMLDivElement | null,\r\n                                scrollX: number,\r\n                                setPosition: Dispatch<SetStateAction<number>>,\r\n                                items: any[]) => {\r\n        if (trackElement) {\r\n            trackElement.style.transition = 'none';\r\n            setPosition(-scrollX * Math.round(items.length / 2));\r\n        }\r\n    }\r\n\r\n    getConfig = (position: number, itemWidth: number, itemMargin: number) => {\r\n        return {\r\n            trackStyle: {\r\n                transform: `translateX(${position}px)`,\r\n            },\r\n            itemStyle: {\r\n                minWidth: `${itemWidth}px`,\r\n                margin: `0 ${itemMargin}px`\r\n            }\r\n        }\r\n    }\r\n\r\n    // setStartPosition(position: number){\r\n    //     this.start_position = position;\r\n    // }\r\n\r\n    // calculateCardsOffsetCount(scrollX: number, endPosition: number){\r\n    //     console.log(this.start_position, endPosition, scrollX);\r\n    //     return Math.round(Math.abs(this.start_position - endPosition) / scrollX);\r\n    // }\r\n\r\n}\r\n\r\nexport const service = new CarouselService();","import React, { useRef } from 'react';\r\nimport css from 'classnames';\r\nimport styles from './Carousel.module.css';\r\nimport {Icon} from '../Icon/Icon';\r\nimport IconsSVG from '../Icon/icons.svg';\r\nimport {useCarousel} from \"./hooks/useCarousel.hook\";\r\n\r\nconst DEFAULT_BREAKPOINTS: Array<IBreakPoint> = [\r\n    {point: 360, slidesToShow: 1},\r\n    {point: 576, slidesToShow: 2},\r\n    {point: 800, slidesToShow: 3},\r\n    {point: 1300, slidesToShow: 4},\r\n    {point: 1500, slidesToShow: 5},\r\n];\r\n\r\nexport type IBreakPoint = {\r\n    point: number,\r\n    slidesToShow: number\r\n}\r\nexport type ICardItem = Record<string, unknown> | string | number;\r\n\r\ninterface ICarouselParams<U> {\r\n    breakpoints?: Array<IBreakPoint>,\r\n    itemMargin?: number,\r\n    items: Array<U>,\r\n    renderCard: (item: U, props?: Record<string, unknown>) => JSX.Element\r\n}\r\n\r\nexport const Carousel: React.FC<ICarouselParams<ICardItem>> = props => {\r\n    const {breakpoints = DEFAULT_BREAKPOINTS, itemMargin = 10, items, renderCard} = props;\r\n\r\n    const wrapper = useRef<HTMLDivElement>(null)\r\n    const track = useRef<HTMLDivElement>(null)\r\n\r\n    const {\r\n        ready,\r\n        config,\r\n        prevBtnHandler,\r\n        nextBtnHandler,\r\n        onTouchStartHandler,\r\n        onTouchMoveHandler,\r\n        onTouchEndHandler,\r\n        onTransitionEndHandler,\r\n        carouselItems\r\n    } = useCarousel({items, breakpoints, itemMargin, wrapper, track});\r\n\r\n    return (\r\n        <div className={styles.carousel_wrapper} ref={wrapper}>\r\n            <div className={css(styles.carousel_button, styles.carousel_button__prev)}\r\n                 onClick={prevBtnHandler}>\r\n                <Icon name=\"carousel-arrow\" file={IconsSVG}/>\r\n            </div>\r\n            <div className={styles.carousel_container}>\r\n                <div className={styles.carousel_track}\r\n                     onTransitionEnd={onTransitionEndHandler}\r\n                     style={config.trackStyle}\r\n                     ref={track}\r\n                     onTouchStart={onTouchStartHandler}\r\n                     onTouchMove={onTouchMoveHandler}\r\n                     onTouchEnd={onTouchEndHandler}>\r\n                    {carouselItems && ready && carouselItems.map((item, idx) => {\r\n                        return renderCard(item, {key: idx, style: config.itemStyle});\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className={css(styles.carousel_button, styles.carousel_button__next)}\r\n                 onClick={nextBtnHandler}>\r\n                <Icon name=\"carousel-arrow\" file={IconsSVG}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {ICardItem} from '../Carousel/Carousel';\r\nimport css from './Card.module.css';\r\n\r\ninterface ICardParams<U> {\r\n    item: U\r\n}\r\n\r\nexport const Card: React.FC<ICardParams<ICardItem>> = (props) => {\r\n    const {item, ...nested} = props;\r\n    return (\r\n        <div className={css.slider_card} {...nested}>\r\n            {item}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './styles/App.css';\r\nimport {HelmetProvider} from 'react-helmet-async';\r\nimport {Carousel, Card} from \"./lib\";\r\n\r\nconst App: React.FC = () => {\r\n    const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <HelmetProvider>\r\n            <div className=\"content-container\">\r\n                <div className=\"carousel-external-container\">\r\n                    <Carousel items={items} renderCard={(item, props) => <Card item={item} {...props}/>}/>\r\n                </div>\r\n            </div>\r\n        </HelmetProvider>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('container')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carousel_wrapper\":\"Carousel_carousel_wrapper__3Tsye\",\"carousel_button\":\"Carousel_carousel_button__2IpYp\",\"carousel_button__prev\":\"Carousel_carousel_button__prev__zJGji\",\"carousel_button__next\":\"Carousel_carousel_button__next__WgEad\",\"carousel_container\":\"Carousel_carousel_container__1nChQ\",\"carousel_track\":\"Carousel_carousel_track__2NcTy\"};"],"sourceRoot":""}